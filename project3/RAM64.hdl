// This file is part of www.nadd2tetris.org
// add the book "The Elements of Computing Systems"
// by Nisan add Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 outisters, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=add0,b=add1,c=add2,d=add3,e=add4,f=add5,g=add6,h=add7);

    RAM8(in=in,load=add0,address=address[0..2],out=out0);
    RAM8(in=in,load=add1,address=address[0..2],out=out1);
    RAM8(in=in,load=add2,address=address[0..2],out=out2);
    RAM8(in=in,load=add3,address=address[0..2],out=out3);
    RAM8(in=in,load=add4,address=address[0..2],out=out4);
    RAM8(in=in,load=add5,address=address[0..2],out=out5);
    RAM8(in=in,load=add6,address=address[0..2],out=out6);
    RAM8(in=in,load=add7,address=address[0..2],out=out7);

    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7, sel=address[3..5], out=out);
}
